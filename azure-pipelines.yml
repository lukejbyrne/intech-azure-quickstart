# Terraform Pipeline
trigger:
  branches:
    include:
      - main  # Trigger pipeline on commits to the main branch

pool:
  vmImage: 'ubuntu-latest'  # Use an Ubuntu agent for the job
  demand: 1

variables:
  terraformVersion: '1.5.5'  # Specify the Terraform version
  azureServiceConnection: 'intech'  # Azure service connection name
  backendStorageAccount: 'skinktfstate'  # Remote backend storage account
  backendContainer: 'tfstate'  # Remote backend storage container
  backendKey: 'terraform.tfstate'  # State file name in remote backend

steps:
  - task: TerraformInstaller@0  # Install Terraform
    inputs:
      terraformVersion: $(terraformVersion)
  
  - checkout: self  # Check out the repository

  - task: TerraformTaskV2@2
    inputs:
      provider: 'azurerm'  # Azure provider
      command: 'init'  # Initialize Terraform
      backendServiceArm: $(azureServiceConnection)
      backendAzureRmStorageAccountName: $(backendStorageAccount)
      backendAzureRmContainerName: $(backendContainer)
      backendAzureRmKey: $(backendKey)
      workingDirectory: 'terraform'  # Set the working directory

  - task: TerraformTaskV2@2
    inputs:
      provider: 'azurerm'
      command: 'plan'  # Run terraform plan
      environmentServiceNameAzureRM: $(azureServiceConnection)
      commandOptions: '-out=plan.tfplan'  # Output the plan to a file
      workingDirectory: 'terraform'  # Set the working directory
